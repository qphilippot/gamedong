{"version":3,"sources":["webpack://GameDong/webpack/universalModuleDefinition","webpack://GameDong/webpack/bootstrap","webpack://GameDong/./assets/tiles/a.png","webpack://GameDong/./assets/tiles/b.png","webpack://GameDong/./assets/tiles/tile.png","webpack://GameDong/./autoload/index.js","webpack://GameDong/./node_modules/events/events.js","webpack://GameDong/./src/app/assets.loader.js","webpack://GameDong/./src/app/class.loader.js","webpack://GameDong/./src/app/index.js","webpack://GameDong/./src/app/main.js","webpack://GameDong/./src/camera/index.js","webpack://GameDong/./src/core/assets/asset.service.js","webpack://GameDong/./src/core/assets/index.js","webpack://GameDong/./src/core/canvas/canvas.model.js","webpack://GameDong/./src/core/canvas/index.js","webpack://GameDong/./src/core/components/POOL.model.js","webpack://GameDong/./src/core/controllers/mouse.controller.js","webpack://GameDong/./src/core/coords/coords.model.js","webpack://GameDong/./src/core/coords/coords2D.model.js","webpack://GameDong/./src/core/coords/coords3D.model.js","webpack://GameDong/./src/core/coords/index.js","webpack://GameDong/./src/core/entity/entity.model.config.js","webpack://GameDong/./src/core/entity/entity.model.js","webpack://GameDong/./src/core/entity/index.js","webpack://GameDong/./src/core/game-element/game-element.model.js","webpack://GameDong/./src/core/game-element/index.js","webpack://GameDong/./src/core/notification/index.js","webpack://GameDong/./src/core/notification/notification.POOL.js","webpack://GameDong/./src/core/notification/notification.model.js","webpack://GameDong/./src/core/scene/index.js","webpack://GameDong/./src/core/scene/scene.model.js","webpack://GameDong/./src/core/scene/scene.settings.js","webpack://GameDong/./src/core/viewport/index.js","webpack://GameDong/./src/core/viewport/viewport.model.js","webpack://GameDong/./src/core/viewport/viewport.mouse.controller.js","webpack://GameDong/./src/map/index.js","webpack://GameDong/./src/map/map.model.js","webpack://GameDong/./src/map/tile-map.model.js","webpack://GameDong/./src/tileset/Tile.model.js","webpack://GameDong/./src/tileset/Tileset.config.js","webpack://GameDong/./src/tileset/Tileset.model.js","webpack://GameDong/./src/tileset/index.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC,iBAAiB,qBAAuB,0C;;;;;;;;;;;ACAxC;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;;;;;;;;;;;AC/bA;AACA;AACA,+BAA+B,mBAAO,CAAC,uDAAwB;AAC/D,4BAA4B,mBAAO,CAAC,iDAAqB;AACzD,4BAA4B,mBAAO,CAAC,iDAAqB;AACzD,E;;;;;;;;;;;ACLA;AACA,uBAAuB,mBAAO,CAAC,gDAAc;AAC7C,cAAc,mBAAO,CAAC,kCAAQ;AAC9B,kBAAkB,mBAAO,CAAC,0DAAuB;AACjD,kBAAkB,mBAAO,CAAC,0CAAY;AACtC,iBAAiB,mBAAO,CAAC,wCAAW;AACpC,iBAAiB,mBAAO,CAAC,gDAAc;AACvC,mBAAmB,mBAAO,CAAC,oDAAgB;AAC3C,sBAAsB,mBAAO,CAAC,4DAAoB;AAClD,0BAA0B,mBAAO,CAAC,sFAAoC;AACtE,iBAAiB,mBAAO,CAAC,gDAAc;AACvC,gBAAgB,mBAAO,CAAC,8CAAa;AACrC;;;;;;;;;;;;ACZA,iBAAiB,mBAAO,CAAC,iCAAQ,E;;;;;;;;;;;ACAjC;;AAEA;AACA,IAAI,mBAAO,CAAC,iDAAgB;AAC5B,IAAI,mBAAO,CAAC,sCAAW;AACvB,IAAI,mBAAO,CAAC,mDAAiB;;AAE7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACjBA,oBAAoB,mBAAO,CAAC,4DAAoB;AAChD,eAAe,mBAAO,CAAC,gDAAc;;AAErC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;ACnEA;AACA,oBAAoB,mBAAO,CAAC,4DAAoB;;AAEhD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,4CAA4C;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA,kCAAkC;AAClC;AACA,6DAA6D,KAAK;AAClE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,gDAAgD,KAAK;AACrD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;AClHA,iBAAiB,mBAAO,CAAC,2DAAiB,gB;;;;;;;;;;;ACA1C;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,S;AACA;;AAEA;AACA,+C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wB;AACA,S;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;;AAEA,gD;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,wB;;;;;;;;;;;AC5OA,iBAAiB,mBAAO,CAAC,yDAAgB,E;;;;;;;;;;;ACAzC;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;AC3DA,eAAe,mBAAO,CAAC,iEAAwB;;AAE/C;AACA,6BAA6B;AAC7B;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,K;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,iC;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,sBAAsB,SAAS;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;AC1BA,eAAe,mBAAO,CAAC,yDAAgB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,0B;;;;;;;;;;;AC1BA,iBAAiB,mBAAO,CAAC,6DAAkB;;AAE3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,0B;;;;;;;;;;;ACnBA,iBAAiB,mBAAO,CAAC,6DAAkB;AAC3C,iBAAiB,mBAAO,CAAC,6DAAkB;;AAE3C,aAAa,mBAAO,CAAC,qEAA0B;;;AAG/C;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL,E;;;;;;;;;;;ACfA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;ACTA,qBAAqB,mBAAO,CAAC,+CAAQ;AACrC,sBAAsB,mBAAO,CAAC,uEAAuB;AACrD,qBAAqB,mBAAO,CAAC,yDAAiB;;AAE9C;;AAEA;AACA,6BAA6B;AAC7B;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;;AAEA,0BAA0B;AAC1B;AACA,+E;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;;AAGA;AACA,mCAAmC,UAAU;AAC7C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;AACA;;AAEA,mCAAmC;AACnC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,cAAc,OAAO;AACrB,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0BAA0B,UAAU,IAAI,MAAM;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wB;;;;;;;;;;;ACxRA,iBAAiB,mBAAO,CAAC,yDAAgB,E;;;;;;;;;;;ACAzC,eAAe,mBAAO,CAAC,gDAAc;;AAErC;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,UAAU;AACtC;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;AClEA,iBAAiB,mBAAO,CAAC,2EAAsB,E;;;;;;;;;;;ACA/C,qBAAqB,mBAAO,CAAC,2EAAsB;AACnD,aAAa,mBAAO,CAAC,yEAAqB;;AAE1C;AACA;AACA;;AAEA,8B;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,2EAAsB;AACnD,aAAa,mBAAO,CAAC,qEAA0B;;AAE/C;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;;;;AAIA,kC;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AC7CA,iBAAiB,mBAAO,CAAC,sDAAe,E;;;;;;;;;;;ACAxC,eAAe,mBAAO,CAAC,6CAAW;AAClC,wBAAwB,mBAAO,CAAC,4DAAkB;;AAElD;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0B;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA,wB;;;;;;;;;;;ACnHA,eAAe,mBAAO,CAAC,2CAAc;AACrC,YAAY,mBAAO,CAAC,qCAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,K;AACA,E;;;;;;;;;;;ACrBA,iBAAiB,mBAAO,CAAC,+DAAkB,E;;;;;;;;;;;ACA3C,eAAe,mBAAO,CAAC,iEAAwB;AAC/C,wBAAwB,mBAAO,CAAC,qFAA6B;AAC7D,eAAe,mBAAO,CAAC,6CAAW;;AAElC;AACA,6BAA6B;AAC7B;AACA;AACA;;;AAGA;AACA;AACA,eAAe,gBAAgB;;AAE/B;AACA,uBAAuB,WAAW;AAClC,2BAA2B,YAAY;AACvC,qCAAqC,EAAE,IAAI,EAAE;AAC7C,a;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sCAAsC;AACtC;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA;AACA,sC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B;AAC/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,S;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;ACvKA,wBAAwB,mBAAO,CAAC,mFAAiC;;AAEjE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yC;;;;;;;;;;;ACbA,YAAY,mBAAO,CAAC,2CAAa;AACjC,gBAAgB,mBAAO,CAAC,qDAAkB;;AAE1C,iBAAiB,mBAAO,CAAC,2CAAa,E;;;;;;;;;;;ACHtC,eAAe,mBAAO,CAAC,sEAA6B;AACpD;AACA,6BAA6B;AAC7B;;AAEA;;;AAGA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;;AAGb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,WAAW;AACxC;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iCAAiC,WAAW;AAC5C;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,WAAW;AAChD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,Y;;AAEA;;AAEA;AACA;AACA;;AAEA,qB;;;;;;;;;;;AChIA,YAAY,mBAAO,CAAC,2CAAa;AACjC;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA,0BAA0B,KAAK;AAC/B,sBAAsB,cAAc;AACpC;AACA;;AAEA;AACA,QAAQ,SAAS,MAAM;AACvB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;;AAIA,sBAAsB,WAAW;AACjC;AACA;AACA,8BAA8B,WAAW;AACzC;AACA;AACA,sCAAsC,WAAW;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA,yB;;;;;;;;;;;AChGA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACtCA;AACA;AACA,E;;;;;;;;;;;ACFA,iBAAiB,mBAAO,CAAC,yDAAkB;AAC3C,eAAe,mBAAO,CAAC,gDAAc;AACrC,aAAa,mBAAO,CAAC,iDAAc;;AAEnC;AACA,6BAA6B;AAC7B;;AAEA;AACA,0B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yB;;;;;;;;;;;AC/DA,iBAAiB,mBAAO,CAAC,uDAAiB,E","file":"gamedong-engine.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"GameDong\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"GameDong\"] = factory();\n\telse\n\t\troot[\"GameDong\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/app/index.js\");\n","module.exports = __webpack_public_path__ + \"059f67d1ccb259a78d52cfa4f77f0ce9.png\";","module.exports = __webpack_public_path__ + \"cddf5fd6d19cb195ddc8a4ac70469679.png\";","module.exports = __webpack_public_path__ + \"0dde22c4f7ae0f112541782fcacd5af3.png\";","/** Generated from cli **/\nmodule.exports = GameDong => {\n    const prefix = '.';\n    // require(prefix + '/grass.tileset.loader.js')(GameDong);\n    // require(prefix + '/sample-1.tileset.loader.js')(GameDong);\n\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","module.exports = (GameDong) => {\n    const AssetManager = GameDong.AssetManager;\n    AssetManager.store('tile', require('@assets/tiles/tile.png'));\n    AssetManager.store('a', require('@assets/tiles/a.png'));\n    AssetManager.store('b', require('@assets/tiles/b.png'));\n};","module.exports = (app) => {\n    app.AssetManager = require('@core/assets');\n    app.Map = require('../map');\n    app.TileMap = require('../map/tile-map.model');\n    app.TileSet = require('../tileset');\n    app.Camera = require('../camera');\n    app.Coords = require('@core/coords');\n    app.ViewPort = require('@core/viewport');\n    app.GameElement = require('@core/game-element');\n    app.MouseController = require('@core/controllers/mouse.controller');\n    app.Canvas = require('@core/canvas');\n    app.Scene = require('@core/scene');\n};\n","module.exports = require('./main');","const app = {};\n\ntry {\n    require('./class.loader')(app);\n    require('@autoload')(app);\n    require('./assets.loader')(app);\n   \n}\n\ncatch(error) {\n    console.error(error);\n}\n\nfinally {\n    window.GameDong = app;\n}\n\nmodule.exports  = app;","const GameElement = require('@core/game-element');\nconst Coords = require('@core/coords');\n\nclass Camera extends GameElement {\n    constructor(settings) {\n        super(settings);\n        \n        this.radius = settings.radius || 10;\n        // this.data.position = settings.coords || Coords._2D.getOne();\n    }\n\n    setScene(scene) {\n        this.data.scene = scene;\n    }\n\n    getScene() {\n        return this.data.scene;\n    }\n\n    /**\n     * Search all visibles game-element through environment according this own position and radius\n     * @param {*} environment \n     */\n    snapshot(environment) {\n        const position = this.getPosition();\n        const pos_x = position.x;\n        const pos_y = position.y;\n        const nbRows = environment.getNbRows();\n        const nbColumns = environment.getNbColumns();\n        \n        const renderingData = environment.getRenderingData(\n            Math.round(pos_x * (nbColumns )) - this.radius,\n            Math.round(pos_y * (nbRows )) - this.radius,\n            0,\n            Math.round(pos_x * (nbColumns )) + this.radius,\n            Math.round(pos_y * (nbRows )) + this.radius,\n            10\n        );\n\n        const delta = this.radius / nbColumns;      \n        const x0 = Math.round((pos_x - delta) * nbColumns) / nbColumns;\n        const y0 = Math.round((pos_y - delta) * nbRows) / nbRows;\n\n        renderingData.forEach(data => {\n            data.x = (data.x - x0) / (2 * delta);\n            data.y = (data.y - y0) / (2 * delta);\n            data.width = data.width / (delta * 2);\n            data.height = data.height / (delta * 2);\n        });\n        \n        return renderingData;\n    }\n\n    move(x = 0, y = 0, z = 0) {\n        const position = this.getPosition();\n        this.setPosition({\n            x: position.x + x,\n            y: position.y + y,\n            z: position.z + z\n        });\n    }\n\n    destroy() {\n        // this.data.coords.recycle();\n    }\n}\n\nmodule.exports = Camera;","// const Asset = require('./asset.model')\nconst GameElement = require('@core/game-element');\n\nclass AssetManager {\n    constructor() {\n        this.ressources = {};\n        this.ressourcesDetails = {};\n        this.index = {};\n    }\n\n    store(name, data, details = null) {\n        this.ressources[name] = data;\n        \n        if (details === null) {\n            this.ressourcesDetails[name] = { name : name };\n        }\n\n        else {\n            details.name = name;\n            this.ressourcesDetails[name] = details;\n        }\n        \n    }\n\n    setDetails(ressourceName, details) {\n        this.ressourcesDetails[ressourceName] = details;\n    }\n\n    get(name) {\n        return this.ressources[name];\n    }\n\n    find(selectors) {\n        const ressourcesName = Object.keys(this.ressources);\n\n        const filteredRessources = ressourcesName.filter(name => {\n            const details = this.ressourcesDetails[name];\n            Object.keys(selectors).forEach(attributeName => {\n                const attributeValue = selectors[attributeName];\n                if (details[attributeName] !== attributeValue) {\n                    return false;\n                }\n            });\n\n            return true;\n        });\n    \n        return filteredRessources.map(name => {\n            return {\n                name: name,\n                value: this.ressources[name],\n                details: this.ressourcesDetails[name]\n            };\n        })\n    }\n\n    createIndex(name, content = {}) {\n        if (typeof this.index[name] !== 'undefined') {\n            throw new Error(`Cannot create an index twice (${name})`);\n        }\n\n        else {\n            this.index[name] = content;\n        }\n    }\n\n    addToIndex(name, key, value) {\n        if (typeof this.index[name] === 'undefined') {\n            throw new Error(`Index not found (${name})`);\n        }\n\n        else {\n            this.index[name][key] = value;\n        }\n    }\n\n    toImage(ressource) {\n        return this.getImage(ressource.name);\n    }\n\n    getImage(imageName) {\n        return new Promise(resolve => {\n            const img = new Image();\n            img.onload = () => resolve(img);\n            img.src = this.get(imageName);\n            img.name = imageName;\n        });\n    }\n\n    getImageAsGameElement(imageName) {\n        return new Promise(resolve => {\n            this.getImage(imageName).then(image => {\n                const elt = new GameElement();\n                elt.name = image.name;\n                elt.setTexture(image);\n\n                resolve(elt);\n            });\n        });\n    }\n    delete(name) {\n        delete this.ressources[name];\n    }\n}\n\nAssetManager.singleton = null;\nAssetManager.getInstance = function() {\n    if (AssetManager.singleton === null) {\n        AssetManager.singleton = new AssetManager();\n    }\n\n    return AssetManager.singleton;\n}\n\nmodule.exports = AssetManager;\n\n","module.exports = require('./asset.service').getInstance();","class Canvas {\n    constructor(settings = {}) {\n        this.node = this.getNode(settings);\n        this.context = this.node.getContext('2d');\n        this.init_Size(settings);\n        this.init_Resolution(settings);\n        this.init_Ratio();\n       \n        if (settings.name) {\n            this.setName(settings.name);\n        }\n\n        this.container = this.getContainer(settings);\n        \n        if (this.container === null) {\n            const parent = this.node.parentNode;\n            if (parent) {\n                this.container = parent;\n                this.container.appendChild(this.node);\n            }\n        }\n\n        else {\n            this.container.appendChild(this.node);\n        }\n    }\n\n    setName(name) {\n        this.name = name;\n        this.node.setAttribute('data-name', name);\n    }\n\n    setContainer(container) {\n        this.contaner = container;\n        this.container.appendChild(this.node);\n        return this;\n    }\n\n    addClass(className) {\n        this.node.classList.add(className);\n        return this;\n    }\n\n    removeClass(className) {\n        this.node.classList.remove(className);\n        return this;\n    }\n\n    toggleClass(className) {\n        this.node.classList.toggle(className);\n        return this;\n    }\n\n    getNode(settings) {\n        const type = typeof settings.node; \n        if (type === 'string') {\n            return document.querySelector(settings.node);\n        }\n\n        else if (type === 'object') {\n            return settings.node;\n        }\n\n        else {\n            return document.createElement('canvas');\n        }   \n    }\n\n    getContainer(settings) {\n        const type = typeof settings.container;   \n  \n        if (type === 'string') {\n            return document.getElementById(settings.container);\n        }\n\n        else if (type === 'object') {\n            return settings.container;\n        }\n\n        else {\n            return null;    \n        }   \n    }\n    \n    setBackground(color) {\n        this.node.style.background = color;\n        return this;\n    }\n\n    disableEvent() {\n        this.node.style.pointerEvents = 'none';\n        return this;\n    }\n\n    enableEvent() {\n        this.node.style.pointerEvents = 'auto';\n        return this;\n    }\n\n    init_Size(settings) {\n        this.size = {};\n        const size = settings.size;\n        if (typeof size === 'undefined') {\n            this.setSize(\n                300,\n                300,\n                false\n            );\n            \n        }\n\n        else {\n            this.setSize(\n                size.width, \n                size.height,\n                false\n            );\n        }\n\n    }\n\n\n    init_Resolution(settings) {\n        this.resolution = {};\n        const resolution = settings.resolution;\n\n        if (typeof resolution === 'undefined') {    \n            this.setResolution(\n                this.size.width,\n                this.size.height\n            );\n        }\n\n        else {\n            \n            this.setResolution(\n                resolution.width, \n                resolution.height\n            );\n        }\n\n    }\n\n    clear() {\n        const resolution = this.resolution;\n        this.context.clearRect(\n            0, 0, \n            resolution.width, resolution.height\n        );\n    }\n\n    init_Ratio() {\n        this.ratio = {};\n        this.updateRatio();\n    }\n\n    setSize(width, height, refreshRatio = true) {\n        this.size.width = width;\n        this.size.height = height;\n\n        this.node.style.width = width + 'px';\n        this.node.style.height = height + 'px';\n        \n        if (refreshRatio === true) {\n            this.updateRatio();\n        }\n    }\n\n    getSize() {\n        return this.size;\n    }\n\n    getWidth() {\n        return this.size.width;\n    }\n\n    getHeight() {\n        return this.size.height;\n    }\n\n    getInnerWidth() {\n        return this.resolution.width;\n    }\n\n    getInnerHeight() {\n        return this.resolution.height;\n    }\n\n    getResolution() {\n        return JSON.parse(JSON.stringify(this.resolution));\n    }\n\n    setResolution(width, height) {\n        this.node.width = width;\n        this.node.height = height;\n\n        this.resolution.width = width;\n        this.resolution.height = height;\n    }\n\n    updateRatio() {\n        const size = this.size;\n        const ratio = this.ratio;\n        const resolution = this.resolution;\n\n        if (size.width === 0 || size.height === 0) {\n            ratio.x = 1;\n            ratio.y = 1;\n        }\n\n        else {\n            ratio.x = resolution.width / size.width;\n            ratio.y = resolution.height / size.height;\n        }\n    }\n\n    getPixelsCoordsFromPageCoords(coords) {\n        const x = coords.x - this.node.offsetLeft + window.scrollX;\n        const y = coords.y - this.node.offsetTop + window.scrollY;\n        return {x, y};\n    }\n\n    getCellCoordsFromPixelCoords(coords) {\n        const ratio  = this.ratio;\n        const x      = Math.floor(coords.x * ratio.x);\n        const y      = Math.floor(coords.y * ratio.y);\n        return {x, y};\n    }\n\n    getNormalizedPosition(coords) {\n        const x = (coords.x - this.node.offsetLeft + window.scrollX) / this.size.width;\n        const y = (coords.y - this.node.offsetTop + window.scrollY) / this.size.height;\n        return {x, y};\n    }\n}\n\nmodule.exports = Canvas;","module.exports = require('./canvas.model');","class POOL {\n    constructor(settings) {\n        this.type = settings.type;\n        this.isInitialized = false;\n\n        const capacity = settings.capacity || 10;\n        this.data = new Array(capacity);\n        this.index = capacity -1;\n        \n\n        this.initPool();\n    }\n\n    getCapacity() {\n        return this.data.length;\n    }\n\n    initPool() {\n        const capacity = this.getCapacity();\n        for(let i = 0; i < capacity; ++i) {\n            this.data[i] = new (this.type)();\n        }\n    }\n\n    setCapacity(capacity) {\n        this.data.length = capacity;\n    }\n\n    beSureThatCapacityIsOkay() {\n        const capacity = this.getCapacity();\n        if ((1 + this.index) === capacity) {\n            this.setCapacity(capacity + 10);\n        }\n    }\n\n    recycle(instance) {\n        this.beSureThatCapacityIsOkay();\n\n        this.data[this.index] = instance;\n        this.index++;\n    }\n\n    getOne() {\n        let instance  = null;\n\n        if (this.index > 0) {\n            instance = this.data[this.index];\n            this.index--;\n        }\n\n        else {\n            instance = new (this.type)();\n        }\n\n        instance.core.pool = this;\n        return instance;\n    }\n}\n\nmodule.exports = POOL;","const Entity = require('../entity/entity.model')\n\nclass MouseController extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n\n        this.component = settings.component;\n    }\n\n    onMouseMove(event) {\n        console.log('mouse move', event);\n    }\n\n    onLeftClick(event) {\n        console.log('mouse left click', event);\n    }\n\n    onRightClick(event) {\n        console.log('mouse right click', event);\n    } \n\n    onMouseWheel(event) {\n        console.log('mouse wheel', event);\n    }\n\n    onMouseDown(event) {\n        event = event || window.event;\n        let button = 0;\n        \n        if (typeof event.buttons === 'undefined') {\n            button = event.which || event.button;\n        }\n\n        switch(button) {\n            case MouseController.LEFT_CLICK:\n                this.onLeftClick(event);\n                break;\n            case MouseController.RIGHT_CLICK:  \n                this.onRightClick(event);\n                break;\n        }\n    }\n\n    onMouseOut() {\n\n    }\n\n    onMouseEnter() {\n\n    }\n    \n    static isLeftClick(event) {\n        // https://stackoverflow.com/questions/3944122/detect-left-mouse-button-press\n        event = event || window.event;\n        if (typeof event.buttons !== 'undefined') {\n            return event.buttons == 1;\n        }\n\n        const button = event.which || event.button;\n        return button == 1;\n    }\n\n    static isRightClick(event) {\n        event = event || window.event;\n        if (typeof event.buttons !== 'undefined') {\n            return event.buttons == 0;\n        }\n\n        const button = event.which || event.button;\n        return button == 0;\n    }\n}\n\nMouseController.LEFT_CLICK = 1;\nMouseController.RIGHT_CLICK = 2;\nmodule.exports = MouseController;","class Coords {\n    constructor(pool) {\n        this.core = {\n            pool: pool || null\n        }\n    }\n\n    set(coords) {\n        const max = Math.min(this.data.length, coords.data.length);\n\n        for(let i = 0; i < max; ++i) {\n            this.data[i] = coords.data[0];\n        }\n    }\n\n    get() {\n        return this.data;\n    }\n\n    recycle() {\n        if (this.core.pool !== null) {\n            this.core.pool.recycle(this);\n        }\n    }\n}\n\nmodule.exports = Coords;","const Coords = require('./coords.model');\n\nclass Coords2D extends Coords {\n    constructor(x = 0, y = 0, pool = null) {\n        super(pool);\n        this.data = [x, y];\n    }\n\n    getX() {\n        return this.data[0];\n    }\n\n    getY() {\n        return this.data[1];\n    }\n\n    setX(x) {\n        this.data[0] = x;\n    }\n\n    setY(y) {\n        this.data[1] = y;\n    }\n\n}\n\nmodule.exports = Coords2D;","const Coords2D = require('./coords2D.model');\n\nclass Coords3D extends Coords2D {\n    constructor(x = 0, y = 0, z = 0, pool = null) {\n        super(x, y, pool)\n        this.data.length = 3;\n        this.data[2] = z;\n    }\n\n    getZ() {\n        return this.data[2];\n    }\n\n    setZ(z) {\n        this.data[2] = z;\n    }\n}\n\n\nmodule.exports = Coords3D;","const Coords2D = require('./coords2D.model');\nconst Coords3D = require('./coords3D.model');\n\nconst POOL = require('../components/POOL.model');\n\n\nmodule.exports = {\n    _2D: new POOL({\n        type: Coords2D,\n        capacity: 20\n    }),\n    \n    _3D: new POOL({\n        type: Coords3D\n    })\n};","module.exports = {\n    name: 'entity',\n    version: '1.0.0',\n\n    strictMode: false,\n    verboseMode: false,\n    auto_setup_settings: true,\n\n    services: {}\n}","const EventEmitter = require('events').EventEmitter;\nconst configuration = require('./entity.model.config');\nconst Notification = require('../notification');\n\nlet counter = 0;\n\nclass Entity {\n    constructor(settings = {}) {\n        // Must copy configuration file cause later a delete may remove services.skill\n        settings = Object.assign(JSON.parse(JSON.stringify(configuration)), settings);\n        \n        this.name = settings.name;\n\n        this.initialize_skills(settings);\n\n        this.skills       = {};\n        this.data         = {};\n        this.ui           = {};\n        this.subscriptions  = {};\n\n        this.services = settings.services;\n        this.strictMode = settings.strictMode;\n        this.verboseMode = settings.verboseMode;\n\n       \n        \n        if (settings.testMode === true) {\n            this.enableTestMode();\n        }\n\n        else {\n            this.store('services_to_enable', settings.services);\n        }\n    }\n\n    setupListener(settings) {\n        this.listeners = [];\n    }\n\n    \n\n    sendNotificationToSubscribers(subscribers, name, data) {\n        if (\n            typeof subscribers !== 'undefined' && \n            typeof subscribers.forEach === 'function'\n        ) {\n            subscribers.forEach(record => {\n                const notification = Notification.POOL.getOne(name, data, this);\n\n                if (typeof record.callback === 'Promise') {\n                    record.callback(notification).then(\n                        () => {\n                            notification.recycle();\n                        },\n\n                        () => {\n                            notification.recycle();\n                        }\n                    );\n                }\n\n                else {\n                    record.callback(notification);\n                    notification.recycle();\n                }\n            \n            });\n        }\n    }\n\n    notify(name, data = {}) {\n        this.sendNotificationToSubscribers(this.subscriptions[name], name, data);\n        this.sendNotificationToSubscribers(this.subscriptions.all, name, data);  \n    }\n\n    getData(propertyName) {\n        return this.data[propertyName];\n    }\n\n    subscribeTo(observable, eventName = 'all', callback = null) {\n        if (callback === null) {\n            callback = this.onNewNotification.bind(this);\n        }\n\n        observable.register(this, eventName, callback);\n    }\n\n    // subscribe(observable) {\n    //     observable.register(this);\n    //     // record all subscribed ?\n    // }\n\n    register(subscriber, eventName, callback) {\n        let subscription = this.subscriptions[eventName];\n        if (typeof subscription !== Set) {\n            subscription = new Set();\n            this.subscriptions[eventName] = subscription;\n        }\n\n        subscription.add({\n            subscriber, \n            callback\n        });\n    }\n\n    onNewNotification(notification) {\n        const notificationName = notification.name;\n\n        // override me !\n\n        notification.recycle();\n    }\n\n    createCustomEvent(eventName, data) {\n        if (typeof window.CustomEvent === \"function\") {\n            return new CustomEvent(eventName, data);\n        }\n        // IE polyfill\n        else {\n            const params = data || { bubbles: false, cancelable: false, detail: undefined };\n            const evt = document.createEvent( 'CustomEvent' );\n            evt.initCustomEvent( eventName, params.bubbles, params.cancelable, params.detail );\n            return evt;\n        }\n    }\n    \n    \n    init_id(settings) {\n        this.entity_id = `entity_${++counter}`;\n        if (typeof settings._id === 'undefined') {\n            this._id = settings._id;\n        }\n\n        else {\n            this._id = this.entity_id;\n        }\n    }\n    \n    disable_skills(settings = {}) {\n        if (typeof settings.services !== 'undefined') {\n            delete settings.services.skill;\n        }\n    }\n\n    initialize_skills(settings = {}) {\n        this.skills = {};\n\n        if (settings.disableSkills === true) {\n            this.disable_skills(settings);\n        }\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    setId(id) {\n        this._id = id;\n    }\n\n    setService(serviceName, serviceInstance) {\n        this.services[serviceName] = serviceInstance;\n    }\n    \n    enableStrictMode() {\n        this.strictMode = true;\n    }\n\n    disableStrictMode() {\n        this.strictMode = false;\n    }\n\n    disableVerboseMode() {\n        this.verboseMode = false;\n    }\n\n    enableVerboseMode() {\n        this.verboseMode = true;\n    }\n\n    enableTestMode() {\n        this.enableStrictMode();\n        this.enableVerboseMode();\n    }\n\n    disableTestMode() {\n        this.disableStrictMode();\n        this.disableVerboseMode();\n    }\n\n    emit(eventName, data) {\n        const target = data.target || window;\n        const event = this.createCustomEvent(eventName, data);\n        target.dispatchEvent(event);\n    }\n\n    listen(eventName, handler) {\n        window.addEventListener(eventName, handler);\n\n        this.listeners = [{\n            eventName: eventName,\n            handler: handler\n        }];\n    }\n\n    store(attributeName, attributeValue) {\n        this.data[attributeName] = attributeValue;\n    }\n\n    //https://stackoverflow.com/questions/494143/creating-a-new-dom-element-from-an-html-string-using-built-in-dom-methods-or-pro/35385518#35385518\n    /**\n    * @param {String} htmlString representing a single element\n    * @return {Element}\n    */\n   generateDOM(htmlString = '') {\n        const template = document.createElement('template');\n        template.innerHTML = htmlString.trim();\n        return template.content.firstChild;\n    }\n\n    get(attributeName) {\n        return this.data[attributeName];\n    }\n\n    log() {\n        console.log.call(null, this.name + ': ', ...arguments);       \n    }\n\n    debug() {\n        if (this.verboseMode) {\n            this.log('debug');\n            this.log(...arguments);\n        }\n    }\n\n    doAsync(task, delay = 1) {\n        setTimeout(() => {\n            task();\n        }, delay);\n    }\n\n    // async waitingFor(promisesArray) {\n    //     return await Promise.all(promisesArray);\n    // }\n\n    hasSkill(skillName) {\n        return typeof this.skills[skillName] !== 'undefined';\n    }\n\n    notifyError(error, throwError = true) {\n        console.error(`[${this.name}] ${error}`);\n        \n        if (throwError === true || this.strictMode === true) {\n            if (error instanceof Error) {\n                throw error;\n            }\n            \n            else {\n                throw new Error(error);\n            }\n        }\n    }\n\n    removeListener(listener) {\n        this.removeEventListener(listener.eventName, listener.handler)\n    }\n\n    removeAllListeners() {\n        this.listeners.forEach(\n            listener => {\n                this.removeListener(listener)\n            }\n        );\n    }\n\n    destroy() {\n        this.removeAllListeners();\n    }\n}\n\nmodule.exports = Entity;","module.exports = require('./entity.model');","const Entity = require('@core/entity');\n\nclass GameElement extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n\n        this.setTexture(settings.texture);\n        this.setPosition(settings.position)\n    }\n\n    move(delta) {\n        this.data.position.x += delta.x;\n        this.data.position.y += delta.y;\n    }\n\n    getX() {\n        return this.data.position.x;\n    }\n\n    getY() {\n        return this.data.position.y;\n    }\n\n    getWidth() {\n        return this.data.size.width;\n    }\n\n    getHeight() {\n        return this.data.size.height;\n    }\n\n    getPosition() {\n        return this.data.position;\n    }\n    \n    setPosition(position = {x: 0, y:0}) {\n        this.data.position = position;\n    }\n\n    setSize(size = {width: 0, height:0}) {\n        this.data.size = size;\n    }\n\n    setTexture(texture = null) {\n        this.data.texture = texture;\n    }\n\n    render(context = null, x, y, w, h) {\n        const d = this.data;\n        const p = d.position;\n        const s = d.size;\n        \n        if (typeof x !== 'number') {\n            x = p.x;\n        }\n\n\n        if (typeof y !== 'number') {\n            y = p.y;\n        }\n \n        context.drawImage(d.texture, x, y, w || s.width, h || s.height);\n        // context.drawImage(d.texture, x, y, w, h);\n    }\n}\n\nmodule.exports = GameElement;","module.exports = require('./game-element.model');","const Notification = require('./notification.model');\nconst POOL = require('./notification.POOL');\n\nif (Notification.POOL === null) {\n    Notification.POOL = new POOL();\n}\n\nmodule.exports = Notification;","const Notification = require('./notification.model');\nconst POOL = require('../components/POOL.model');\n\nclass NotificationPOOL extends POOL {\n    constructor(settings) {\n        super({\n            type: Notification,\n            capacity: 10\n        });\n    }\n\n    getOne(name, data, emitter) {\n        const notification = super.getOne();\n        notification.setName(name);\n        notification.setEmitter(emitter);\n        notification.setData(data);\n\n\n        return notification;\n    }\n   \n}\n\n\n\nmodule.exports = NotificationPOOL;","class Notification {\n    constructor(name, data = null, emitter = null) {\n        this.name = name || '';\n        this.data = data;\n        this.emitter = emitter;\n\n        this.core  = {};\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getData() {\n        return this.data;\n    }\n\n    setData(data) {\n        this.data = data;\n    }\n\n    setName(name) {\n        this.name = name;\n    }\n\n    setEmitter(emitter) {\n        this.emitter = emitter;\n    }\n\n    clear() {\n        this.name = null;\n        this.data = null;\n        this.emitter = null;\n    }\n\n    recycle() {\n        this.clear();\n        Notification.POOL.recycle(this);\n    }\n}\n\nif (typeof Notification.POOL === 'undefined') {\n    Notification.POOL = null;\n}\n\nmodule.exports = Notification;","module.exports = require('./scene.model');","const Entity = require('../entity');\nconst DefaultSettings = require('./scene.settings');\n\nclass Scene extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n        this.init();\n        this.setEnvironment(settings.environment);\n        this.setCamera(settings.camera);\n    }\n\n    init() {\n        this.entities = [];\n        this.capacity = 0;\n        this.nbGameElement = 0;\n        this.controllers = {};\n    }\n\n    setEnvironment(environment = null) {\n        this.environment = environment;\n    }\n\n    setCamera(camera = null) {\n        if (camera === null) {\n            camera = new Ca\n        }\n\n        this.camera = camera;\n    }\n\n    bindTo(viewport) {\n        this.viewport = viewport;\n        this.subscribeTo(\n            viewport, \n            'mouse-move', \n            this.onMouseMove.bind(this)\n        );\n    }\n\n\n    onMouseMove(notification) {\n        console.log('scene-mouse-move', notification);\n    }\n\n    render(viewport) {\n        if (typeof viewport === 'undefined') {\n            viewport = this.viewport;\n        }\n        \n        viewport.clear();\n        \n        const renderingData = this.camera.snapshot(this.environment);\n        const context = viewport.getContext();\n        const width =  viewport.getResolution().width;\n        \n        context.font = '20px';\n            \n        // data.x is a normalized coord into environment coord system.\n        // we want to transform theses coordinates in 0..1 coordinates into viewport grid\n        renderingData.forEach(data => {\n            data.x = Math.round(data.x * width);\n            data.y = Math.round(data.y * width);\n            data.width = Math.round(data.width * width);\n            data.height = Math.round(data.height * width);\n           \n            data.gameElement.render(\n                context, \n                data.x, \n                data.y, \n                data.width, \n                data.height\n            );\n        });\n    }\n\n    unlink() {\n        // @todo\n        //this.unsubscribe()\n    }\n\n    add(gameElement, x = 0, y = 0, z = 0) {\n        this.environment.add(gameElement, x, y, z);\n\n        if (this.nbGameElement <= this.capacity) {\n            this.entities[this.nbGameElement] = gameElement;\n            this.nbGameElement++;\n        }\n\n        else {\n            this.entities.push(gameElement);\n            this.nbGameElement = this.entities.length;\n            this.capacity = this.nbGameElement;\n        }\n    }\n    \n    increaseCapacity(delta = 0) {\n        this.entities.length += Math.abs(delta);\n    }\n\n    move(x, y, z) {\n        this.camera.move(x, y, z);\n    }\n\n    getEnvironment() {\n        return this.environment;\n    }\n\n    static create() {\n        return new Scene({ \n            camera: DefaultSettings.getCamera(),\n            environment: DefaultSettings.getEnvironment()\n        });\n    }\n}\n\nmodule.exports =  Scene;","const Camera = require('../../camera');\nconst Map = require('../../map');\n\nmodule.exports = {\n    getCamera() {\n        return new Camera({\n            radius: 5,\n            position: {\n                x: 0.5,\n                y: 0.5\n            }\n        });\n    },\n    \n    getEnvironment() {\n        return new Map({\n            name: 'map',\n            nbRows: 100,\n            nbColumns: 100\n        });\n    } \n};","module.exports = require('./viewport.model');","const Entity = require('../entity/entity.model');\nconst MouseController = require('./viewport.mouse.controller');\nconst Canvas = require('../canvas');\n\nclass ViewPort extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n        this.init_ViewPort(settings);\n    }\n\n    \n    drawCoordinates() {\n        const context = this.getContext();\n        const { width, height } = this.getResolution();\n\n        context.font = '1px serif';\n        for (let i = 0; i < width; i++) {\n            for (let j = 0; j < height; j++) {\n                context.fillText(`(${i}, ${j})`, i, j);\n            }    \n        }\n    }\n\n    getResolution(layerName = 'main') {\n        return this.layers[layerName].resolution;\n    }\n\n    getSize(layerName = 'main') {\n        return this.layers[layerName].size;\n    }\n\n    getContext(layerName = 'main') {\n        return this.layers[layerName].context;  \n    }\n\n    init_Controllers(settings) {\n        this.controllers = {};\n        this.init_MouseController(settings);\n    }\n\n    init_MouseController(settings = {}) {\n        let Model = MouseController;\n\n        if (typeof settings.MouseController === 'function') {\n            Model = settings.MouseController;\n        }\n\n        this.setMouseController(new Model({\n            component: this\n        }));\n    }\n\n    setMouseController(handler) {\n        this.controllers.mouse = handler\n    }\n\n    setupViewPortListeners(settings) {\n        this.init_Controllers(settings);\n        const mainLayer = this.layers.main.node;\n       \n        mainLayer.addEventListener('mousemove', (event) => {\n            this.controllers.mouse.onMouseMove(event);\n        });\n\n        mainLayer.addEventListener('mousedown', (event) => {\n           this.controllers.mouse.onMouseDown(event);\n        });\n\n        mainLayer.addEventListener('mouseout', event => {\n            this.controllers.mouse.onMouseOut(event);\n        });\n\n        mainLayer.addEventListener('mouseenter', event => {\n            this.controllers.mouse.onMouseEnter(event);\n        });\n    }\n\n    addLayer(name) {\n        const main = this.layers.main; \n        \n        const layer = new Canvas({\n            name: name,\n            container: main.container,\n            size: main.size,\n            resolution: main.resolution\n        });\n\n        layer\n            .disableEvent()\n            .addClass('gd-viewport')\n            .setBackground('none')\n        ;\n\n        this.layers[name] = layer;\n    }\n\n    clear(layer) {\n        if (typeof layer === 'string') {\n            this.layers[layer].clear();\n        }\n\n        else {\n            Object.values(this.layers).forEach(\n                layer => layer.clear()\n            );\n        }\n    }\n    \n    init_ViewPort(settings = {}) {\n        settings.name = 'main';\n        const main = new Canvas(settings);\n        main.addClass('gd-viewport');\n\n        // .setContainer(\n        //     document.getElementById(settings.container)\n        // );\n        \n        this.layers = { main };\n        this.shrinkContainer();\n\n        this.addLayer('ui');\n\n        this.setupViewPortListeners(settings);\n    }\n\n    setResolution(width, height) {\n        Object.values(this.layers).forEach(\n            layer => layer.setResolution(width, height)\n        );\n    }\n\n    shrinkContainer() {\n        this.layers.main.container.style.width = this.layers.main.getWidth() + 'px';\n    }\n    \n    setSize(width, height, refreshRatio = true) {\n        Object.values(this.layers).forEach(\n            layer => layer.setSize(width, height, refreshRatio)\n        );\n\n        this.shrinkContainer();\n        \n        if (refreshRatio === true) {\n            this.setResolution(width, height)\n        } \n    }\n\n    getPixelsCoordsFromPageCoords(coords) {\n        return this.layers.main.getPixelsCoordsFromPageCoords(coords);\n    }\n\n    bind(component) {\n        component.subscribe(this);\n    }\n\n    getCellCoordsFromPixelCoords(coords) {\n        const ratio  = this.layers.main.ratio;\n        const x      = Math.floor(coords.x * ratio.x);\n        const y      = Math.floor(coords.y * ratio.y);\n        return {x, y};\n    }\n\n    getNormalizedPosition(coords) {\n        return this.layers.main.getNormalizedPosition(coords);\n    }\n}\n\nmodule.exports = ViewPort;","const MouseController = require('../controllers/mouse.controller');\n\nclass ViewPortMouseController extends MouseController {\n    constructor(settings) {\n       super(settings);\n    }\n\n    onMouseMove(event) {\n        const normalizedCoords = this.component.getNormalizedPosition(event);\n        this.component.notify('mouse-move', normalizedCoords);\n    }\n}\n\nmodule.exports = ViewPortMouseController;","const Map = require('./map.model');\nconst TileMap = require('./tile-map.model');\n\nmodule.exports = require('./map.model');","const Entity = require('../core/entity/entity.model');\nclass Map extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n\n        this.layers = {};\n\n\n        this.context = {\n            topLeftPixelCoords: {\n                x: 0,\n                y:0\n            },\n\n            topRightPixelCoords: {\n                x: 0,\n                y:0\n            },\n\n            bottomLeftPixelCoords: {\n                x: 0,\n                y:0\n            },\n\n\n        }\n\n        this.data.nbRows           = settings.nbRows || 10;\n        this.data.nbColumns        = settings.nbColumns || 10;\n        this.data.nbLayers         = 0;\n        this.data.layersAvailabes  = [];\n    }\n\n    getLayer(z) {\n        return this.layers[z] || null;\n    }\n\n    setLayer(layers = {}, index) {\n        this.layers[index] = layers;\n        this.data.nbLayers = Object.keys(this.layers).length;\n        this.data.layersAvailabes = Object.values(this.layers).sort();\n    }\n\n    add(gameElement, x = 0, y = 0, z = 0) {\n        if (typeof this.layers[z] !== 'undefined') {\n            if (typeof this.layers[z][x] !== 'undefined') {\n                this.layers[z][x][y] = gameElement;\n            }\n\n            else {\n                this.layers[z][x] = {};\n                this.layers[z][x][y] = gameElement;\n            }\n        }\n\n        else {\n            const layer = {};\n            layer[x] = {};\n            layer[x][y] = gameElement;\n            this.setLayer(layer, z);\n        }\n    }\n\n    // render(x_min, y_min, z_min, x_max, y_max, z_max, context) {\n    //     let layer, row = null;\n    //     for(let z = z_min; z < z_max; ++z) {\n    //         if (typeof this.layers[z] === 'undefined') {\n    //             continue;\n    //         }\n\n    //         else {\n    //             layer = this.layers[z];\n    //         }\n\n    //         for(let y = y_min; y < y_max; ++y) {\n    //             if (typeof layers[y] === 'undefined') {\n    //                 continue;\n    //             }\n    \n    //             else {\n    //                 row = layers[y];\n    //             }\n\n    //             for(let x = x_min; x < x_max; ++x) {\n    //                 if (typeof row[x] === \"undefined\") {\n    //                     continue\n    //                 }\n\n    //                 else {\n    //                     row[x].render(context)\n    //                 }\n    //             }\n    //         }\n    //     }\n    // }\n\n    getNbRows() {\n        return this.data.nbRows;\n    }\n\n    getNbColumns() {\n        return this.data.nbColumns;\n    }\n\n    viewPortCellCoordsToMapCellCoords(viewportCellCoords) {\n        const x = Math.floor(viewportCellCoords.x * this.getNbRows());\n        const y = Math.floor(viewportCellCoords.y * this.getNbColumns());\n        return {x, y};\n    }\n    \n\n    // onNewNotification(notification) {\n    //     const notificationName = notification.name;\n\n    //     switch(notificationName) {\n    //         case 'updateCoords':\n    //             this.viewPortCellCoordsToMapCellCoords(notification.data);\n    //             break;\n    //         default:\n    //             break;\n    //     } \n\n    //     // override me !\n\n    //     notification.recycle();\n    // }\n}\n\nmodule.exports = Map;","const Map = require('./map.model');\nclass TileMap extends Map {\n    constructor(settings = {}) {\n        settings.name = settings.name || 'tile-map';\n        super(settings);\n    }\n\n    add(tile, x = 0, y = 0, z = 0, width = 1, height = 1) {\n        tile.setPosition({x, y});\n        tile.setSize({width, height});\n        super.add(tile, x, y, z);\n    }\n\n    // map date is an object like\n    // { layer: { x : { y : gameElement }}}\n    fill(mapData) {\n\n    }\n\n    getRenderingDataFromNormalizedCoords(x_min = 0, y_min = 0, z_min = 0, x_max = 0, y_max = 1, z_max = 1) {\n        const nbColumns = this.getNbColumns();\n        const nbRows = this.getNbRows();\n        return this.getRenderingData(\n            Math.round(x_min *  nbColumns),\n            Math.round(y_min *  nbRows),\n            z_min,\n            Math.round(x_max *  nbColumns),\n            Math.round(y_min *  nbRows),\n            z_max,\n        );\n    }\n\n    getTile(x, y, z = 0) {\n        const layer = this.layers;\n        if (\n            typeof layer[z] !== 'undefined' &&\n            typeof layer[z][x] !== 'undefined'\n        ) {\n            return this.layers[z][x][y];\n        }\n\n        else {\n            return undefined;\n        }\n    }\n\n    \n    getRenderingData(x_min = 0, y_min = 0, z_min = 0, x_max = this.getNbColumns(), y_max = this.getNbRows(), z_max = 10) {\n        let layer, column = null;\n        let renderingData = [];\n        let x, y, z;\n\n\n       \n        for(z = z_min; z < z_max; z++) {\n            layer = this.getLayer(z);\n            if (layer !== null) {\n                for(x = x_min; x < x_max; x++) {\n                    if (typeof layer[x] !== 'undefined') {\n                        column = layer[x];\n                        for(y = y_min; y < y_max; y++) {\n                            if (typeof column[y] !== \"undefined\") {\n                                const elt = column[y];\n                                renderingData.push({\n                                    gameElement: elt,\n                                    x: elt.getX() / this.getNbColumns(),\n                                    y: elt.getY() / this.getNbRows(),\n                                    width: elt.getWidth() / this.getNbColumns(),\n                                    height: elt.getHeight() / this.getNbRows()\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return renderingData;\n    }\n\n    \n    getNbRows() {\n        return this.data.nbRows;\n    }\n\n    getNbColumns() {\n        return this.data.nbColumns;\n    }\n\n    viewPortCellCoordsToMapCellCoords(viewportCellCoords) {\n        const x = Math.floor(viewportCellCoords.x * this.getNbRows());\n        const y = Math.floor(viewportCellCoords.y * this.getNbColumns());\n        return {x, y};\n    }\n}\n\nmodule.exports = TileMap;","class Tile {\n    constructor(settings = {}) {\n        this.src = settings.value;\n        this.name = settings.name;\n        this.setImg(settings.img);\n\n        this.details = settings.details\n\n    }\n\n    setImg(img = new Image()) {\n        this.img = img;\n        this.loaded = img.height !== 0;\n    }\n\n    isLoaded() {\n        return this.loaded;\n    }\n\n    load() {\n        return new Promise(resolve => {\n            const img = new Image();\n            img.onload = () => {\n                this.setImg(img);\n                this.img = img;\n                resolve(img);\n            };\n\n            img.src = this.src;\n            img.name = this.name;\n        });\n    }\n\n    setDetails(details) {\n        this.details = details;\n    }\n}\n\nmodule.exports = Tile;","module.exports = {\n    defaultName: 'Untitled tileset'\n};","const defaults = require('./Tileset.config');\nconst Entity = require('@core/entity');\nconst Tile = require('./Tile.model');\n\nclass Tileset extends Entity {\n    constructor(settings = {}) {\n        super(settings);\n\n        this.setName(settings.name);\n        this.tiles = null; \n        this.assetManager = settings.assetManager;\n\n        this.index = settings.index || null;\n        this.retrieveTiles();\n    }\n\n    retrieveTiles() {\n        let ressources;\n\n        if (this.index === null) {\n            ressources = this.assetManager.find({\n                tileset: this.name\n            });\n        }\n\n        else {\n            ressources = this.assetManager.index[this.index];\n        }\n       \n        this.tiles = ressources.map(ressource => {\n            return new Tile(ressource);\n        });\n    }\n\n    loadTiles() {\n        return this.tiles.filter(tile => {\n            return tile.isLoaded() === false;\n        }).map(tile => {\n            tile.load();\n        });\n    }\n\n    getTile(name) {\n        return this.tiles[name];\n    }\n\n    setName(name) {\n        this.name = name || defaults.name;\n    }\n\n    exports() {\n        // todo\n    }\n\n    import() {\n        // todo\n    }\n\n    getTiles() {\n        return Object.values(this.tiles);\n    }\n}\n\nmodule.exports = Tileset;","module.exports = require('./Tileset.model');"],"sourceRoot":""}